name: Deploy stage
on:
  push:
    branches:
      - "stage"

jobs:
  
  build-push:
    
    name: Deploy stage
    runs-on: ubuntu-20.04
    environment: stage

    steps:

    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: lab-actions
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$(echo ${GITHUB_SHA} | cut -c1-8) .

    - name: Build and push manifest to GitOps
      env:
        ENV_REF: stage
        ECR_REGISTRY: $ECR_REGISTRY/$ECR_REPOSITORY
      run: |
        export TAG_IMAGE=`echo ${GITHUB_SHA} | cut -c1-8`
        export REPO_NAME=`echo ${GITHUB_REPOSITORY} | cut -d '/' -f2`
        mkdir /tmp/platform-opsgenie-notification
        envsubst <./kubernetes/cronjob.yaml >/tmp/platform-opsgenie-notification/cronjob.yaml

    - name: Checkout repo K8s
      uses: actions/checkout@v2
      env: 
        GIT_REPOSITORY: 'EzzioMoreira/app-react'
      with:
        repository: 'EzzioMoreira/app-react'
        token: ${{ secrets.API_TOKEN_GITHUB }}
        path: stage
    
    - name: Pull Request Auto 
      run: |
        git config --global user.name 'EzzioMoreira'
        git config --global user.email 'enzziom@gmail.com'
        git clone https://EzzioMoreira:${{ secrets.API_TOKEN_GITHUB }}@github.com/EzzioMoreira/app-react --branch=stage stage5
        cd stage5
        git checkout -b teste3
        git remote set-url origin https://EzzioMoreira:${{ secrets.API_TOKEN_GITHUB }}@github.com/EzzioMoreira/app-react.git
        echo "teste" > teste.txt
        git add *
        git commit -m "test: auto pr"
        git push -f
        git pr create --label "bug,help wanted" --title "Teste de auto PR" --body "Agora vai"
